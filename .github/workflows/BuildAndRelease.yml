name: Build and create a release when tag is pushed

# Only deploy when a new tag is pushed
on:
    push:
        # tags:
        #   - "v*.*-alpha"
        #   - "v*.*.*"
        branches: [ main ]
    pull_request:
        branches: [ main ] 

# Must match the project() name in CMakeLists.txt
env:
    APP_NAME: pico-infonesPlus

# Allow this workflow to write back to the repository
permissions:
    contents: write
    
# Build binary and send to releases
jobs:
    build-release:
        runs-on: ubuntu-latest
        name: Build and create release
        steps:
          
          - name: Install dependencies
            run: |
                 sudo apt update && \
                 sudo apt install -y git python3 && \
                 sudo apt install -y cmake gcc-arm-none-eabi libnewlib-arm-none-eabi build-essential libusb-1.0-0-dev
                 
          - name: Check out this repository with submodules
            uses: actions/checkout@v2
            with:
                submodules: recursive
          
          - name: Update line containing pico_set_program_version() in CMakelists.txt with tag name.
            run: |
                 pwd
                 ls -l
                 # Extract the tag name that triggered the event and remove the 'refs/tags/' prefix
                 input_string=${{ github.ref }}
                 input_string="v11.0.0"
                 prefix="refs/tags/"
                 tag="No versioninfo found"
                 if [[ $input_string == $prefix* ]]; then
                      echo "The string starts with 'refs/tags/'."
                      tag="${input_string#$prefix}"     
                      echo "Tag is ${tag}"
                      sed -i "s/^[[:space:]]*pico_set_program_version(.*/pico_set_program_version(piconesPlus \"$tag\")/" CMakeLists.txt   
                 else
                      echo "The string does not start with 'refs/tags/'."
                 fi
                 grep "pico_set_program_version" CMakeLists.txt

          - name: Install Pico SDk
            run: |
                 cd $HOME && \
                 pwd && \
                 ls -l && \
                 git clone https://github.com/raspberrypi/pico-sdk.git --branch master && \
                 cd pico-sdk/ && \
                 git submodule update --init

          - name: Install picotool
            run: |
                 cd $HOME && \
                 export PICO_SDK_PATH=$HOME/pico-sdk && \
                 git clone https://github.com/raspberrypi/picotool.git --branch master && \
                 cd picotool/ && \
                 mkdir build && \
                 cd build && \
                 cmake .. && \
                 make

          - name: Build all the .uf2 files
            run: |            
                 chmod +x build*.sh && \
                 export PICO_SDK_PATH=$HOME/pico-sdk && \
                 ./buildAll.sh \
                 ls -l

          - name: Show release info using picotool
            run: |
                 cd $HOME && \
                 export PICO_SDK_PATH=$HOME/pico-sdk && \
                 picotool/build/picotool info -l releases/piconesPlusAdaFruitDVISD.uf2 && \
                 picotool/build/picotool info -l releases/build/piconesPlusFeatherDVI.uf2 && \
                 picotool/build/picotool info -l releases/piconesPlusPimoroniDVI.uf2

          - name: Create release
            uses: softprops/action-gh-release@v1
            if: startsWith(github.ref, 'refs/tags/')
            with:
                files: |
                       releases/piconesPlusAdaFruitDVISD.uf2
                       releases/piconesPlusFeatherDVI.uf2
                       releases/piconesPlusPimoroniDVI.uf2    
                body_path: CHANGELOG.md
          
         